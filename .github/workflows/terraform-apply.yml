name: terraform apply workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_HOME_IP: ${{ secrets.HOME_IP }}
  TF_VAR_palo_username: ${{ secrets.PALO_USERNAME }}
  TF_VAR_palo_password: ${{ secrets.PALO_PASSWORD }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
  BUCKET_KEY: ${{ secrets.BUCKET_KEY }}
  BUCKET_ENDPOINT: ${{ secrets.BUCKET_ENDPOINT }}
  BUCKET_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY_ID }}
  BUCKET_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/drewpypro/kube-aws-istio:latest
    defaults:
      run:
        working-directory: infrastructure

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Verify Backend
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BUCKET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUCKET_SECRET_ACCESS_KEY }}
        run: |
          aws --endpoint-url ${BUCKET_ENDPOINT} s3api head-object --bucket ${BUCKET_NAME} --key test/poop.txt || \
          (echo "❌ Backend validation failed. Check credentials or filepath." && exit 1)

      - name: Inject IPs into policy YAML
        run: |
          sed -i "s|\\\$HOME_IP|${{ secrets.HOME_IP }}|g" policies/palo_access.yaml
          IP=$(curl -s ifconfig.me)
          echo "Runner public IP: $IP"
          sed -i "s|\\\$GIT_IP|$IP/32|g" policies/palo_access.yaml
          aws ec2 authorize-security-group-ingress \
            --region us-west-2 \
            --group-id "sg-0b5d6e2811145808d" \
            --description "automated from git workflow" \
            --protocol tcp \
            --port "443" \
            --cidr "${IP}/32" > /dev/null
          
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=$BUCKET_NAME" \
            -backend-config="key=$BUCKET_KEY" \
            -backend-config="endpoint=$BUCKET_ENDPOINT" \
            -backend-config="access_key=$BUCKET_ACCESS_KEY_ID" \
            -backend-config="secret_key=$BUCKET_SECRET_ACCESS_KEY"

      - name: Terraform Plan
        run: |
          terraform plan -out=tfplan

      - name: Terraform Apply
        run: |
          terraform apply -input=false tfplan
